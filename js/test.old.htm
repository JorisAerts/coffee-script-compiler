<html>
<head>
	<script src="coffee-script.js"></script>
	<script src="uglifyjs.js"></script>
	<script src="wrapper.js"></script>
	<style><!--
		body {
			background: #ccc;
			padding: 2.5em;
			font-size: 12px;
		}
		pre { 
			background: #fff;
			border: 4px solid #ccc;
			border-radius: .5em;
			box-shadow: 0 0 2.5em rgba(255,255,255, .7);
			padding: .5em;
			margin-bottom: 2em;
			overflow:auto;
		}
		h2 {
			font-size: 120%;
			margin-bottom: .2em;
			margin-top: 1em;
		}
	--></style>
</head>
<body>
	<pre id="code"></pre>
	<h2>Source Map</h2>
	<pre id="sourcemap"></pre>
</body>
<script id="script" type="text/other">

class extends test
	constructor:->
	test:(a...)=>

</script>
<script type="nada">var out = (function(){
	
	
	var el = function(id) { return document.getElementById(id); },
		test = CoffeeScript.compile(el("script").text, { 
			sourceMap: true, 
			bare: true 
		}),
		coffeeReserveds = function(ret, words){
			for (var i=0, size=words.length; i<size; i++){
 				ret[words[i]] = { rx: new RegExp("__" + words[i] + "(.*)?(\\,\\n)|$"), found:false }
			}
			return ret;
		}({},["bind", "hasProp", "extends", "slice"]),
		
		processFragment = function(f, result){
			var r,m,w;
			for (w in coffeeReserveds){
				r = coffeeReserveds[w];
				r.found = !r.found && f.code.match(r.rx);
				if(r.rx.text(r.code)){
					r.found = true;
					m = f.code.match(r.rx);
				}
				
			}
			return coffeeReserveds;
		}
		;
	
	for (var f, i=0, size = test.fragments.length; i<size; i++){
		f = test.fragments[i];
		if(/__bind|__hasProp|__extend|__slice/.test(f.code)){
			console.log(f);
			var cR = processFragment(f,test),
				q = 1;
				
			console.log (cR);	
			
			if (/^\s*?;\s*?$/.test(test.fragments[i+1].code)){
				q++;
				if (/^\s*?var\s*?$/.test(test.fragments[i-1].code)){
					q++; i--;
				}
			}
			test.fragments.splice(i, q);
			break;
		}
	}
	
	var code = "";
	for (var f in test.fragments){
		code += test.fragments[f].code; 
	}
	
	test.js = code;
	
	return test;

})();

console.log (out);
document.getElementById("code").innerHTML = out.js;
document.getElementById("sourcemap").innerHTML = out.v3SourceMap;


</script>
</html>